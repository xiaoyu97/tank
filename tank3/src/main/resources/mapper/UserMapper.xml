<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.banyuan.tank.tank3.mapper.UserMapper">
    <!-- 自定义返回结果集 -->
    <resultMap id="userMap" type="com.banyuan.tank.tank3.domain.User">
        <id property="id" column="id" javaType="java.lang.Integer"></id>
        <result property="gmt_create" column="gmtCreate" javaType="java.util.Date"></result>
        <result property="gmt_modified" column="gmtModified" javaType="java.util.Date"></result>
        <result property="proj_name" column="projectName" javaType="java.lang.String"></result>
        <result property="proj_link" column="projectLink" javaType="java.lang.String"></result>
        <result property="proj_begin" column="begin" javaType="java.util.Date"></result>
        <result property="proj_end" column="end" javaType="java.util.Date"></result>
        <result property="proj_desc" column="projectDesc" javaType="java.lang.String"></result>
        <result property="achievement" column="achievement" javaType="java.lang.Double"></result>
        <result property="is_delete" column="isDelete" javaType="java.lang.Integer"></result>
        <result property="user_id" column="userId" javaType="java.lang.Integer"></result>

    </resultMap>
    <!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。
    parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型-->
    <!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys
                方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->
    <!--keyProperty： （仅对 insert有用）标记一个属性，
    MyBatis 会通过 getGeneratedKeys或者通过 insert 语句的 selectKey 子元素设置它的值。默认：不设置。 -->
    <!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值  -->

<!--添加-->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id" >
        insert into project_experience (proj_name,proj_link,proj_begin,proj_end,proj_desc,achievement,is_delete,user_id)
                    values (#{projectName},#{projectLink},#{begin},#{end},#{projectDesc},#{achievement},#{isDelete},#{userId})
    </insert>

    <update id="updateUser" >
        update project_experience set proj_name=#{projectName},proj_link=#{projectLink},proj_begin=#{begin},
        proj_end=#{end},proj_desc=#{projectDesc},achievement=#{achievement} where id=#{id}
    </update>

    <delete id="deleteUser" parameterType="int">
        update  project_experience set is_delete=0 where id=#{id}
    </delete>

    <select id="selectUserById" parameterType="int" resultMap="userMap">

        select * from project_experience where id=#{id} and is_delete = 1
    </select>

<!-- 查询  -->
    <select id="selectAllUser" resultMap="userMap">
        select * from project_experience
    </select>
</mapper>

